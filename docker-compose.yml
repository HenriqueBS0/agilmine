services:
    laravel.test:
        build:
            context: './docker/8.3'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.3/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
    mysql:
        image: 'mysql/mysql-server:8.0'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - ./docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh
            - ./docker/mysql/backup.sql:/docker-entrypoint-initdb.d/backup.sql
            - ./docker/mysql/restore-mysql.sh:/docker-entrypoint-initdb.d/restore-mysql.sh
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    postgres:
        image: postgres:latest
        restart: always
        networks:
            - sail
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./docker/redmine-postgres/backup.sql:/docker-entrypoint-initdb.d/backup.sql
            - ./docker/redmine-postgres/restore-postgres.sh:/docker-entrypoint-initdb.d/restore-postgres.sh
        environment:
            - 'POSTGRES_PASSWORD=password'
            - 'POSTGRES_DB=redmine'

    redmine:
        image: redmine:latest
        restart: always
        networks:
            - sail
        volumes:
            - redmine-data:/usr/src/redmine/files
        ports:
            - 9934:3000
        environment:
            - 'REDMINE_DB_POSTGRES=postgres'
            - 'REDMINE_DB_DATABASE=redmine'
            - 'REDMINE_DB_PASSWORD=password'
    cron:
        build:
            context: ./docker/cron
        container_name: cron
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock # Permite que o container interaja com outros containers
            - ./docker/mysql/restore-mysql.sh:/docker-entrypoint-initdb.d/restore-mysql.sh
            - ./docker/redmine-postgres/restore-postgres.sh:/docker-entrypoint-initdb.d/restore-postgres.sh
        networks:
            - sail

networks:
    sail:
        driver: bridge

volumes:
    sail-mysql:
        driver: local
    postgres-data:
        driver: local
    redmine-data:
        driver: local
